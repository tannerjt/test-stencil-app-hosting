import{r as t,c as e,h as i,H as s,g as r}from"./p-a7bcab11.js";import{b as a}from"./p-fd260f2d.js";import{p as o,a as h,f as n,b as c,g as l,c as d}from"./p-e49ecfaf.js";import{generalize as u}from"@arcgis/core/geometry/geometryEngine.js";import{D as p}from"./p-3bf8d293.js";import{C as m}from"./p-1fde1b24.js";import{i as g}from"./p-d8201573.js";import{g as f}from"./p-4e4add71.js";import{d as y}from"./p-5cd57599.js";import b from"@arcgis/core/layers/GraphicsLayer.js";import{watch as w}from"@arcgis/core/core/watchUtils.js";import{webMercatorToGeographic as v}from"@arcgis/core/geometry/support/webMercatorUtils.js";import x from"@arcgis/core/geometry/Extent.js";import I from"@arcgis/core/Graphic.js";import{isAbortError as G}from"@arcgis/core/core/promiseUtils.js";import{l as C}from"./p-c57d2d2f.js";import"./p-78e655d3.js";import"./p-18586bed.js";import"./p-b7cd5e4e.js";import"./p-dfe5a97d.js";import"@arcgis/core/kernel.js";var D;!function(t){t.ACTIVE="active",t.HOVER="hover",t.DEFAULT="default"}(D||(D={}));const F=[115,96,167],j={point:{color:F},polyline:{color:F,width:2},polygon:{color:F,width:2},callout:{backgroundColor:[255,255,255],textColor:[0,0,0],hoverColor:[169,169,169],activeColor:[39,129,153],width:2,isOffset:!1}},O={callout:function(t,e=j.callout,i){const{backgroundColor:s,textColor:r,hoverColor:a,activeColor:o,width:h,isOffset:n,is3D:c}=e,l=i+1;let d=[255,255,255];return t===D.HOVER?d=a:t===D.ACTIVE&&(d=o),{type:"cim",data:{type:"CIMSymbolReference",symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:30,frame:{xmin:-4,ymin:-4,xmax:4,ymax:4},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:n?4.5:4,y:n?c?9:11:4},symbol:{type:"CIMTextSymbol",fontFamilyName:"Arial",fontStyleName:"Bold",height:3.25,horizontalAlignment:"Center",symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:[...r,255]}]},verticalAlignment:"Center"},textString:l>99?"99+":`${l}`}],scaleSymbolsProportionally:!0},{type:"CIMVectorMarker",enable:!0,size:30,frame:{xmin:n?-5:-4,ymin:n?c?-9:-11:-4,xmax:n?3:4,ymax:n?c?-1:-3:4},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{rings:[[[0,0],[4,0],[4.35,.02],[4.69,.06],[5.04,.14],[5.37,.24],[5.69,.37],[6,.54],[6.29,.72],[6.57,.94],[6.83,1.17],[7.06,1.43],[7.28,1.71],[7.46,2],[7.63,2.31],[7.76,2.63],[7.86,2.96],[7.94,3.31],[7.98,3.65],[8,4],[7.98,4.35],[7.94,4.69],[7.86,5.04],[7.76,5.37],[7.63,5.69],[7.46,6],[7.28,6.29],[7.06,6.57],[6.83,6.83],[6.57,7.06],[6.29,7.28],[6,7.46],[5.69,7.63],[5.37,7.76],[5.04,7.86],[4.69,7.94],[4.35,7.98],[4,8],[3.65,7.98],[3.31,7.94],[2.96,7.86],[2.63,7.76],[2.31,7.63],[2,7.46],[1.71,7.28],[1.43,7.06],[1.17,6.83],[.94,6.57],[.72,6.29],[.54,6],[.37,5.69],[.24,5.37],[.14,5.04],[.06,4.69],[.02,4.35],[0,4],[0,0]]]},symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidStroke",enable:!0,capStyle:"Round",joinStyle:"Round",lineStyle3D:"Strip",miterLimit:10,width:h,color:[...d,255]},{type:"CIMSolidFill",enable:!0,color:[...s,255]}]}}]}]}}}},point:function(t=j.point){const{color:e}=t;return{type:"text",color:[...e,.9],text:"Óòù",font:{size:24,family:"CalciteWebCoreIcons"}}},polyline:function(t=j.polyline){const{color:e,width:i}=t;return{type:"simple-line",color:[...e,1],width:i,style:"solid"}},polygon:function(t=j.polygon){const{color:e,width:i}=t;return{type:"simple-fill",color:[...e,.15],outline:{color:[...e,1],width:i}}}};var R=function(t,e,i,s){var r,a=arguments.length,o=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,i,s);else for(var h=t.length-1;h>=0;h--)(r=t[h])&&(o=(a<3?r(o):a>3?r(e,i,o):r(e,i))||o);return a>3&&o&&Object.defineProperty(e,i,o),o};let S=class{constructor(i){t(this,i),this.arcgisHubMapPopoverOpen=e(this,"arcgisHubMapPopoverOpen",7),this.arcgisHubMapPopoverClear=e(this,"arcgisHubMapPopoverClear",7),this.hubTelemetry=e(this,"hubTelemetry",7),this.initialized=!1,this.cachedFeatures=[],this.unsavedExistingGeometry=[],this.cachedRelatedFeatureGeometry={},this.layerIds=[],this.persistAttribute="__persist__",this.theme={},this.preview=!0,a(this,"makeGraphic","makeCalloutGraphic","getRelatedFeature","setCalloutSymbolOnPointerMove","handleMapClickDiscussions","handleViewSizeChange","handleMapDrawSelect","addRelatedFeature","removeRelatedFeature","renderAddLocation","renderRemoveLocation","calculateOffsets")}async componentWillLoad(){this.initialize(),this.intl=await g.loadIntlForComponent(this.element),C()}disconnectedCallback(){this.teardown()}eventTargetIsDiscussionsRef(t){return t.target===this.discussionsRef||t.target===this.onMapDiscussionsRef||t.target===this.onMapDiscussionsPreviewRef}emitHubTelemetry(t){this.hubTelemetry.emit(Object.assign(Object.assign({},t),{postId:this.sketchPostId,channelId:this.currentDiscussionsRef.channelId}))}attachView(t,e){const{initialized:i}=this;t&&t!==e?(i&&this.teardown(),this.initialize()):!t&&i&&this.teardown()}attachdiscussionsRef(t){const{initialized:e}=this;t&&!e&&this.initialize()}handleDrawRefUpdate(){this.saveInitialDrawOptions()}calculateOffsets(){const{view:t,preview:e,graphicGeometry:i,isOffset:s,previewHeight:r,activeMapDiscussion:a}=this;if(t&&a){const{container:a}=t,{top:o,left:h,right:n}=a.getBoundingClientRect(),c=t.toScreen(i),l=s?c.x+5:c.x,d=s?c.y-34:c.y;this.leftOffset=e?l+h:n,this.topOffset=e?d+o-r:o}}handlePreviewDidLoad(t){const{detail:e}=t;this.previewHeight=0,this.previewHeight=e}handlePreviewExpanded(){this.preview=!1}handleGeometryGoTo(t){const{detail:e}=t,i=[...this.geometryGraphicsLayer.graphics.toArray(),...this.calloutGraphicsLayer.graphics.toArray()];let s=[];if(e){const t=e.postDetails.postId,r=e.replyDetails?e.replyDetails.postId:e.postDetails.postId;s=i.filter((({attributes:{id:e,parentId:i}})=>e===r||t&&i===t))}else{const{activeMapDiscussion:{locationId:t}}=this;s=i.filter((({attributes:{relatedFeatureId:e}})=>e===t))}s.length&&this.goTo(s)}handleGeometryFeature(t){const{detail:{post:e,create:i}}=t;this.unsavedExistingGeometry=[],this.cachedFeatures=this.cachedFeatures.filter((({properties:{id:t}})=>t!==e.id)),o(e)&&(this.cachedFeatures=[...this.cachedFeatures,...o(e)],i&&this.cachedFeatures.map((t=>{const{properties:{id:i}}=t,{parentId:s}=e;return i===s&&("replyCount"in t.properties||(t.properties.replyCount=0),t.properties.replyCount+=1),t})),this.refreshFeatures(this.cachedFeatures),this.clearHoverActiveGraphics(!0))}handleGeometryFeatureDeleted(t){const{detail:{id:e,parentId:i}}=t;this.cachedFeatures=this.cachedFeatures.filter((({properties:{id:t}})=>t!==e)).map((t=>{const{properties:{id:e}}=t;return e===i&&(t.properties.replyCount-=1),t})),this.refreshFeatures(this.cachedFeatures),this.clearHoverActiveGraphics(!0)}handleGeometryFeatureSelect(t){const{detail:{properties:{id:e,relatedFeatureId:i,index:s,unsaved:r}}}=t;if(r){let e=this.unsavedGeometryGraphicsLayer.graphics.getItemAt(s);i&&(e=this.makeGraphic(t.detail)),this.goTo(e)}else{const t=this.calloutGraphicsLayer.graphics.find((t=>{const{attributes:{relatedFeatureId:r,id:a,__index__:o}}=t;return i?i==r:a==e&&(null===o||s==o)}));if(t){this.addHighlightGraphic(t,D.ACTIVE,!1);const r=i?this.cachedRelatedFeatureGeometry[i].arcgis:this.getGraphicById(e,s);this.goTo(r)}}}handleGeometryFeatureHighlight(t){const{detail:{properties:{id:e,relatedFeatureId:i,index:s,unsaved:r}}}=t;if(r)this.clearHoverActiveGraphics();else{const t=this.calloutGraphicsLayer.graphics.find((t=>{const{attributes:{relatedFeatureId:r,id:a,__index__:o}}=t;return i?i==r:a==e&&(null===o||s==o)}));t&&this.addHighlightGraphic(t,D.HOVER,!1)}}handleFeatureRemove(t){const{detail:{properties:{id:e,relatedFeatureId:i,index:s,unsaved:r}}}=t,{currentDiscussionsRef:{unsavedFeatures:a,unsavedRelatedFeatures:o}}=this;if(r)if(i)this.currentDiscussionsRef.unsavedRelatedFeatures=[...o.slice(0,s),...o.slice(s+1,o.length)];else{this.currentDiscussionsRef.unsavedFeatures=[...a.slice(0,s),...a.slice(s+1,a.length)];const t=this.unsavedGeometryGraphicsLayer.graphics.getItemAt(s);this.unsavedGeometryGraphicsLayer.graphics.remove(t)}else{const t=t=>{const{attributes:{relatedFeatureId:r,id:a,__index__:o}}=t;return i?i==r:a==e&&(null===o||s==o)},r=this.calloutGraphicsLayer.graphics.find(t);r&&(r.visible=!1);const a=this.geometryGraphicsLayer.graphics.find(t);a&&(a.visible=!1)}this.clearHoverActiveGraphics(!0)}handleGeometryDrawCreate(t){const{detail:e}=t;this.sketchPostId=e,this.drawRef.buffer=!1,this.drawRef.disablePrimaryOptions=!0,this.drawRef.disableEditOptions=!0}handleGeometryDrawTypeSelect(t){this.drawRef.setActiveTool(t.detail)}handleGeometryDrawEdit(t){const{drawRef:e}=this,{detail:{properties:{id:i,index:s,unsaved:r}}}=t,{geometry:a}=r?this.unsavedGeometryGraphicsLayer.graphics.getItemAt(s):this.getGraphicById(i,s);this.hideLayers(),this.goTo(a),this.sketchPostId=i,this.sketchIndex=s,this.sketchIsUnsaved=r,e.geometry=a,e.disablePrimaryOptions=!0,e.buffer=!1}handleGeometryDrawEditCancel(){this.currentDiscussionsRef.unsavedFeatures=[...this.currentDiscussionsRef.unsavedFeatures],this.drawRef.forceReset(),this.showLayers()}handleDrawGraphicsChange(t){const{detail:{graphics:e,save:i,canceled:s,unsaved:r}}=t,{sketchPostId:a,sketchIndex:o,sketchIsUnsaved:n}=this,c=e.getItemAt(0);if(c.geometry=function(t,e,i=3.5){const{resolution:s}=e;return u(t,s*i,!1)}(c.geometry.clone(),this.view),i&&this.drawRef.disablePrimaryOptions){const t=v(c.geometry),e=h(t);if(n){const t=this.currentDiscussionsRef.unsavedFeatures.map(((t,i)=>(i===this.sketchIndex&&(t.geometry=e),t)));this.currentDiscussionsRef.unsavedFeatures=t,this.unsavedGeometryGraphicsLayer.graphics.getItemAt(this.sketchIndex).geometry=c.geometry}else{const t=this.postToGeoJSON(e,{index:o,id:a});this.currentDiscussionsRef.unsavedExistingFeatures=[...this.currentDiscussionsRef.unsavedExistingFeatures.filter((({properties:{index:t}})=>t!==o)),t];const i=this.getGraphicById(a,o);this.unsavedExistingGeometry.filter((({id:t,index:e})=>t===a&&e===o)).length||this.unsavedExistingGeometry.push({id:a,index:o,geometry:i.geometry.clone()}),i.geometry=c.geometry}this.drawRef.forceReset(),this.showLayers();const i=d(e);this.emitHubTelemetry(y.dictionary.category.content.action.update.label.location.details[i])}else if(s)this.currentDiscussionsRef.unsavedFeatures=[...this.currentDiscussionsRef.unsavedFeatures],this.drawRef.forceReset(),this.showLayers();else if(r){this.drawRef.forceReset(),c.symbol=O[c.geometry.type](this.themeWithDefaults[c.geometry.type]),this.addGraphicsToGraphicsLayer(this.unsavedGeometryGraphicsLayer,[c]);const t=[];e.forEach((e=>{const i=v(e.geometry),s=h(i);t.push({type:"Feature",geometry:s,properties:{id:this.sketchPostId}});const r=d(s);this.emitHubTelemetry(y.dictionary.category.content.action.create.label.location.details[r])})),this.currentDiscussionsRef.unsavedFeatures=[...this.currentDiscussionsRef.unsavedFeatures,...t]}}handleGeometryDrawReset(){this.currentDiscussionsRef.unsavedFeatures=[...this.currentDiscussionsRef.unsavedFeatures],this.restoreInitialDrawOptions(),this.showLayers()}handleGeometryClearAll(){this.resetStagedFeatures(),this.restoreInitialDrawOptions(),this.showLayers(),this.unsavedGeometryGraphicsLayer.graphics.removeAll();const t=t=>{t.visible=!0};this.geometryGraphicsLayer.graphics.forEach(t),this.calloutGraphicsLayer.graphics.forEach(t)}addRelatedFeature(){const t=this.selectedGraphic.attributes[this.selectedGraphic.layer.objectIdField];this.selectedGraphic.geometry=v(this.selectedGraphic.geometry);const e={postId:this.sketchPostId,objectId:t,feature:h(this.selectedGraphic.toJSON())};this.currentDiscussionsRef.unsavedRelatedFeatures=[...this.currentDiscussionsRef.unsavedRelatedFeatures,e],this.highlightGraphic(),this.arcgisHubMapPopoverClear.emit(),this.emitHubTelemetry(y.dictionary.category.interaction.action.select.label.content)}removeRelatedFeature(){const{currentDiscussionsRef:{unsavedRelatedFeatures:t}}=this,e=this.selectedGraphic.attributes[this.selectedGraphic.layer.objectIdField],i=this.currentDiscussionsRef.unsavedRelatedFeatures.findIndex((t=>t.objectId==e));this.currentDiscussionsRef.unsavedRelatedFeatures=[...t.slice(0,i),...t.slice(i+1,t.length)],this.arcgisHubMapPopoverClear.emit(),this.clearHighlights(),this.emitHubTelemetry(y.dictionary.category.interaction.action.deselect.label.content)}renderAddLocation(){return i("calcite-action-pad",{"expand-disabled":!0,expanded:!0,layout:"horizontal"},i("calcite-action",{icon:"pin-plus",onClick:this.addRelatedFeature,text:this.intl.t("location.add"),textEnabled:!0}))}renderRemoveLocation(){return i("calcite-action-pad",{"expand-disabled":!0,expanded:!0,layout:"horizontal"},i("calcite-action",{icon:"trash",onClick:this.removeRelatedFeature,text:this.intl.t("location.remove"),textEnabled:!0}))}async handleMapDrawSelect(t){const{detail:e}=t,{targetLayer:i}=this,{results:[s]}=await this.view.hitTest(e,{include:i});if((null==s?void 0:s.graphic)&&this.drawRef.disableEditOptions){const{graphic:t}=s,e=t.attributes[t.layer.objectIdField];if(!t.attributes.hasOwnProperty(i.displayField)){const{features:[s]}=await i.queryFeatures({objectIds:[e],outFields:["*"],returnGeometry:!1});s&&(t.attributes=s.attributes)}const r=this.currentDiscussionsRef.unsavedRelatedFeatures.map((t=>t.objectId));let a=this.renderAddLocation;r.includes(e)&&(a=this.renderRemoveLocation),this.selectedGraphic=t,this.arcgisHubMapPopoverOpen.emit({geometry:t.geometry,view:this.view,render:a}),this.highlightGraphic(t)}else this.selectedGraphic=null,this.highlightGraphic()}handleDiscussionsClose(t){t.target!==this.onMapDiscussionsRef&&t.target!==this.onMapDiscussionsPreviewRef||(this.activeMapDiscussion=void 0,this.clearHoverActiveGraphics(!0))}setDiscussionsRefHasMap(t){this.discussionsRef&&(this.discussionsRef.hasMap=t)}async initialize(){const{view:t,context:e}=this;if(this.saveInitialDrawOptions(),t&&e){if(await t.when(),this.addGeometryGraphicsLayer(),this.addStagedGeometryGraphicsLayer(),this.addCalloutGraphicsLayer(),this.addHighlightGraphicsLayer(),this.fetchSubject(),this.fetchPosts(),this.handleViewSizeChange(),this.cachedFeatures.length)try{await this.refreshFeatures(this.cachedFeatures)}catch(t){console.warn("Cannot add discussions features to the map",t.message)}this.setDiscussionsRefHasMap(!0),this.mapViewSizeChangeHandler=w(t,"size",this.handleViewSizeChange),this.mapViewCenterChangeHandler=w(t,"center",this.calculateOffsets),this.initialized=!0}}teardown(){this.initialized=!1,this.clearHighlights(),this.removeViewHandlers(),this.removeLayers(),this.resetSelect(),this.setDiscussionsRefHasMap(!1)}fetchSubject(){const{discussion:t,context:e}=this;n(Object.assign({discussion:t},e.hubRequestOptions))}fetchPosts(){f(this.discussion,this.context.hubRequestOptions).then((t=>{(null==t?void 0:t.features)&&(this.cachedFeatures=t.features,this.initialized&&this.refreshFeatures(t.features))}))}addGeometryGraphicsLayer(){this.geometryGraphicsLayer=new b({graphics:[],elevationInfo:{mode:"on-the-ground"}}),this.view.map.add(this.geometryGraphicsLayer),this.layerIds.push(this.geometryGraphicsLayer.id)}addStagedGeometryGraphicsLayer(){this.unsavedGeometryGraphicsLayer=new b({graphics:[],elevationInfo:{mode:"on-the-ground"}}),this.view.map.add(this.unsavedGeometryGraphicsLayer),this.layerIds.push(this.geometryGraphicsLayer.id)}addCalloutGraphicsLayer(){this.calloutGraphicsLayer=new b({graphics:[],effect:"drop-shadow(0px, 2px, 8px, rgba(0, 0, 0, .20))",elevationInfo:{mode:"relative-to-ground"}}),this.view.map.add(this.calloutGraphicsLayer),this.layerIds.push(this.calloutGraphicsLayer.id),this.mapPointerMoveHandler=this.view.on("pointer-move",this.setCalloutSymbolOnPointerMove),this.mapClickDiscussionsHandler=this.view.on("click",this.handleMapClickDiscussions)}addHighlightGraphicsLayer(){this.highlightGraphicsLayer=new b({graphics:[],elevationInfo:{mode:"relative-to-ground"}}),this.view.map.add(this.highlightGraphicsLayer),this.layerIds.push(this.highlightGraphicsLayer.id)}addHighlightGraphic(t,e,i){var s,r;const{themeWithDefaults:a,highlightGraphicsLayer:o,persistAttribute:h,is3D:n}=this,c=t.clone();c.symbol=O.callout(e,Object.assign(Object.assign({},a.callout),{isOffset:null===(s=null==t?void 0:t.attributes)||void 0===s?void 0:s.isOffset,is3D:n}),null===(r=c.attributes)||void 0===r?void 0:r.totalCount),c.attributes[h]=i,this.clearHoverActiveGraphics(i),o.add(c)}setCalloutSymbolOnPointerMove(t){this.view.hitTest(t,{include:this.calloutGraphicsLayer}).then((t=>{if(t.results.length){const[e]=t.results,{graphic:i}=e;this.addHighlightGraphic(i,D.HOVER,!1)}else this.clearHoverActiveGraphics(!1)}))}removeLayers(){[this.geometryGraphicsLayer,this.unsavedGeometryGraphicsLayer,this.calloutGraphicsLayer,this.highlightGraphicsLayer].forEach((t=>this.removeLayer(t)))}hideLayers(){[this.geometryGraphicsLayer,this.unsavedGeometryGraphicsLayer,this.calloutGraphicsLayer,this.highlightGraphicsLayer].forEach((t=>t.opacity=.1))}showLayers(){[this.geometryGraphicsLayer,this.unsavedGeometryGraphicsLayer,this.calloutGraphicsLayer,this.highlightGraphicsLayer].forEach((t=>t.opacity=1))}removeLayer(t){t&&t.destroy()}emptyFeatures(){[this.geometryGraphicsLayer,this.unsavedGeometryGraphicsLayer,this.calloutGraphicsLayer].forEach((t=>t.removeAll()))}addGraphicsToGraphicsLayer(t,e){t.addMany(e)}async refreshFeatures(t){this.emptyFeatures(),this.resetSelect(),t.forEach((t=>{var e;return t.properties.totalCount=null!==(e=t.properties.replyCount)&&void 0!==e?e:0}));const e=({geometry:t})=>Boolean(t),i=t.map(this.makeGraphic).filter(e),s=t.map(this.makeCalloutGraphic).filter(e),r=t.filter((({properties:t})=>Boolean(c(t.discussion).features))),a=Array.from(new Set(r.map((({properties:{discussion:t}})=>c(t).features.map((t=>t)))).flat()));await this.cacheRelatedFeatureGeometry(a);const o=[],h=[];for(const t of r){if(h.includes(t.properties.id))continue;h.push(t.properties.id);const{properties:e}=t,{features:i}=c(e.discussion);e.totalCount=0,i.forEach((i=>{var s;const r=o.find((({properties:{relatedFeatureId:t}})=>t==i));if(r){const{properties:t}=r,i=(null!==(s=e.totalCount)&&void 0!==s?s:0)+1;t.totalCount+=i}else try{const e=this.getRelatedFeature(i);e.properties=Object.assign(Object.assign({},t.properties),{relatedFeatureId:i}),o.push(e)}catch(t){console.warn("Failed to access post related feature:",t.message)}}))}const n=[...s,...o.map(this.makeCalloutGraphic)];this.addGraphicsToGraphicsLayer(this.geometryGraphicsLayer,i),this.addGraphicsToGraphicsLayer(this.calloutGraphicsLayer,n)}pointToExtent(t,e=.0025){const{x:i,y:s,spatialReference:r}=t;return new x({xmin:i-e,ymin:s-e,xmax:i+e,ymax:s+e,spatialReference:r})}goTo(t){if(!this.view)return;let e=t;e.geometry&&"point"===e.geometry.type&&(e=this.pointToExtent(e.geometry)),e.extent&&(e=e.extent.clone().expand(2)),this.view.goTo({target:e},{duration:1e3,easing:"ease"}).catch((t=>{G(t)||console.error("Failed to zoom map to target feature or extent:",t.message)}))}postToGeoJSON(t,e){return{type:"Feature",geometry:t,properties:e}}makeGraphic(t){var e;const i=l(t),s=I.fromJSON(i);return(null===(e=null==s?void 0:s.geometry)||void 0===e?void 0:e.type)&&(s.symbol=O[s.geometry.type](this.themeWithDefaults[s.geometry.type])),s}makeCalloutGraphic(t){var e;const{is3D:i}=this,{callout:s}=O,{geometry:r,properties:a}=t,[o,h]=r.coordinates.flat(1/0),n=!a.relatedFeatureId&&"Point"===t.geometry.type,c=l({type:"Feature",geometry:{type:"Point",coordinates:[o,h]},properties:Object.assign(Object.assign({},a),{replyCount:a.replyCount||0,isOffset:n})}),d=I.fromJSON(c);return d.symbol=s(D.DEFAULT,Object.assign(Object.assign({},this.themeWithDefaults.callout),{isOffset:n,is3D:i}),null===(e=t.properties)||void 0===e?void 0:e.totalCount),d}getRelatedFeature(t){return{type:"Feature",geometry:this.cachedRelatedFeatureGeometry[t].geojson,properties:{}}}async cacheRelatedFeatureGeometry(t){const{cachedRelatedFeatureGeometry:e,targetLayer:i}=this;if(!i)return void console.warn("Discussions service layer not defined; ingnoring related features");const s=Object.keys(e),r=t.filter((t=>!s.includes(`${t}`)));if(r.length){const t={where:"1=1",objectIds:r.map((t=>+t)),returnGeometry:!0,outSpatialReference:{wkid:4326},outFields:[this.targetLayer.objectIdField,this.targetLayer.displayField]},{features:e}=await this.targetLayer.queryFeatures(t);e.forEach((({geometry:t,attributes:e})=>{const i=h(t);this.cachedRelatedFeatureGeometry[e[this.targetLayer.objectIdField]]={arcgis:t,geojson:i}}))}}getGraphicById(t,e){return this.geometryGraphicsLayer.graphics.find((({attributes:{id:i,__index__:s}})=>i===t&&(null===e||e==s)))}highlightGraphic(t){this.clearHighlights(),t&&(this.clearHighlights(),this.view.whenLayerView(t.layer).then((e=>{this.highlightHandle=e.highlight(t)})))}clearHighlights(){this.highlightHandle&&(this.highlightHandle.remove(),this.highlightHandle=null)}clearHoverActiveGraphics(t){const{persistAttribute:e,highlightGraphicsLayer:i}=this;if(t)i.removeAll();else{const t=i.graphics.filter((({attributes:t})=>!t[e]));i.removeMany(t.toArray())}}removeViewHandlers(){[this.mapPointerMoveHandler,this.mapClickDiscussionsHandler,this.mapViewSizeChangeHandler,this.mapViewCenterChangeHandler].forEach((t=>{t&&(t.remove(),t=null)}))}resetSelect(){this.clearHighlights()}saveInitialDrawOptions(){const{drawRef:{buffer:t,disableEditOptions:e,disablePrimaryOptions:i}}=this;this.initialDrawOptions={buffer:t,disableEditOptions:e,disablePrimaryOptions:i}}restoreInitialDrawOptions(){const{initialDrawOptions:{buffer:t,disableEditOptions:e,disablePrimaryOptions:i}}=this;this.drawRef.buffer=t,this.drawRef.disableEditOptions=e,this.drawRef.disablePrimaryOptions=i,this.drawRef.setActiveTool(void 0),this.drawRef.forceReset()}resetStagedFeatures(){this.currentDiscussionsRef.unsavedFeatures=[],this.currentDiscussionsRef.unsavedRelatedFeatures=[],this.currentDiscussionsRef.unsavedExistingFeatures=[],this.unsavedExistingGeometry.forEach((({id:t,index:e,geometry:i})=>{this.getGraphicById(t,e).geometry=i})),this.unsavedExistingGeometry=[]}handleMapClickDiscussions(t){this.view.hitTest(t,{include:[this.calloutGraphicsLayer]}).then((t=>{if(t.results.length){this.preview=!0;const[e]=t.results,{graphic:i}=e;this.graphicGeometry=i.geometry,this.isOffset=i.attributes.isOffset;const{attributes:{parentId:s,channelId:r,id:a,relatedFeatureId:o}}=i;this.activeMapDiscussion=o?{channelId:r,locationId:o}:{channelId:r,postId:s||a,replyId:s?a:void 0},this.addHighlightGraphic(i,D.ACTIVE,!0)}}))}handleViewSizeChange(){const{view:{height:t,width:e}}=this;this.viewHeight=t,this.viewWidth=e}get currentDiscussionsRef(){return this.activeMapDiscussion?this.onMapDiscussionsRef:this.discussionsRef}get themeWithDefaults(){const{theme:t}=this,e={};return["point","polyline","polygon","callout"].forEach((i=>{e[i]=Object.assign(Object.assign({},j[i]),t[i])})),e}get is3D(){const{view:t}=this;return t.hasOwnProperty("camera")}get targetLayer(){return this.view.map.allLayers.filter((t=>"feature"===t.type&&!this.layerIds.includes(t.id))).getItemAt(0)}get styles(){const{view:t,viewWidth:e,viewHeight:i,leftOffset:s,topOffset:r,previewHeight:a,preview:o}=this;let h={};if(t){const{container:n}=t,{top:c,left:l,right:d,bottom:u}=n.getBoundingClientRect();h={"--left-offset":`${s}px`,"--top-offset":`${r}px`,"--panel-left":`${l}px`,"--panel-height":(o?i-a:u-c)+"px","--panel-width":d-l+"px","--view-width":`${e}px`,"--view-height":`${i}px`}}return h}render(){const{activeMapDiscussion:t,styles:e,context:r,discussion:a,isHub:o,preview:h}=this;return t&&i(s,{"data-element":"discussions-map-integrator",style:e},h?i("arcgis-hub-discussions-map-preview",{channelId:t.channelId,context:r,discussion:a,locationId:t.locationId,postId:t.postId,ref:t=>{this.onMapDiscussionsPreviewRef=t},replyId:t.replyId}):i("arcgis-hub-discussions",{channelId:t.channelId,context:r,disableNavigation:!t.locationId,discussion:a,dismissible:!0,enableGoTo:!0,hasMap:!0,isHub:o,locationId:t.locationId,postId:t.postId,ref:t=>{this.onMapDiscussionsRef=t},replyId:t.replyId}))}static get assetsDirs(){return["locales"]}get element(){return r(this)}static get watchers(){return{view:["attachView"],discussionsRef:["attachdiscussionsRef"],drawRef:["handleDrawRefUpdate"],preview:["calculateOffsets"],previewHeight:["calculateOffsets"],context:["initialize"]}}};R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryGoTo",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryFeature",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryFeatureDeleted",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryFeatureSelect",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryFeatureHighlight",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleFeatureRemove",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryDrawCreate",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryDrawTypeSelect",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryDrawEdit",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryDrawEditCancel",null),R([m({when(t){return t.target===this.drawRef}})],S.prototype,"handleDrawGraphicsChange",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryDrawReset",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleGeometryClearAll",null),R([m({when(t){return this.eventTargetIsDiscussionsRef(t)}})],S.prototype,"handleDiscussionsClose",null),R([m({when:t=>t})],S.prototype,"refreshFeatures",null),R([m({when(){return this.drawRef}})],S.prototype,"saveInitialDrawOptions",null),R([m({when(){return this.drawRef&&this.initialDrawOptions}})],S.prototype,"restoreInitialDrawOptions",null),R([m({when(){return this.currentDiscussionsRef}})],S.prototype,"resetStagedFeatures",null),R([p({timeout:50})],S.prototype,"handleViewSizeChange",null),S.style=".sc-arcgis-hub-discussions-map-integrator-h{display:block}@media only screen and (min-width: 640px){arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{position:absolute}arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{z-index:10}arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{width:25rem}arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{padding:0px}arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{top:calc(var(--top-offset) + 4.5rem);left:calc(var(--left-offset) - 5rem - 25rem);max-height:calc(var(--panel-height) - 6rem)}arcgis-hub-discussions-map-preview.sc-arcgis-hub-discussions-map-integrator{position:absolute}arcgis-hub-discussions-map-preview.sc-arcgis-hub-discussions-map-integrator{z-index:10}arcgis-hub-discussions-map-preview.sc-arcgis-hub-discussions-map-integrator{width:25rem}arcgis-hub-discussions-map-preview.sc-arcgis-hub-discussions-map-integrator{top:calc(var(--top-offset));left:calc(var(--left-offset))}}@media only screen and (max-width: 640px){arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{position:absolute}arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{z-index:10}arcgis-hub-discussions.sc-arcgis-hub-discussions-map-integrator{width:calc(var(--panel-width) + 0.05rem);top:calc(var(--top-offset) + var(--panel-height) * .5);max-height:calc(var(--panel-height) * .5);height:calc(var(--panel-height) * .5);left:0.95rem}arcgis-hub-discussions-map-preview.sc-arcgis-hub-discussions-map-integrator{position:absolute}arcgis-hub-discussions-map-preview.sc-arcgis-hub-discussions-map-integrator{z-index:10}arcgis-hub-discussions-map-preview.sc-arcgis-hub-discussions-map-integrator{width:calc(var(--panel-width) - 0.95rem);top:calc(var(--panel-height) + 3.2rem);left:0.5rem}}";export{S as arcgis_hub_discussions_map_integrator}